package faizan.java.basics.graphs;

public class Main {

	public static void main(String[] args) {
		UndirectedUnweightedGraph graph1=new AdjacencyMatrixUndirectedUnweightedGraph(5);
		graph1.addEdge(0, 1);
		graph1.addEdge(0, 2);
		graph1.addEdge(0, 3);
		graph1.addEdge(1, 4);
		graph1.addEdge(2, 3);
		graph1.addEdge(2, 4);
		graph1.printGraph();
		UndirectedUnweightedGraph graph2=new AdjacencyListUndirectedUnweightedGraph(5);
		graph2.addEdge(0, 1);
		graph2.addEdge(0, 2);
		graph2.addEdge(0, 3);
		graph2.addEdge(1, 4);
		graph2.addEdge(2, 3);
		graph2.addEdge(2, 4);
		graph2.printGraph();		
		UndirectedUnweightedGraph graph3=new MapUndirectedUnweightedGraph();
		graph3.addEdge(0, 1);
		graph3.addEdge(0, 2);
		graph3.addEdge(0, 3);
		graph3.addEdge(1, 4);
		graph3.addEdge(2, 3);
		graph3.addEdge(2, 4);
		graph3.printGraph();		
		AdjacencyListUndirectedUnweightedGraph graph12=new AdjacencyListUndirectedUnweightedGraph(6);
		graph12.addEdge(0, 1);
		graph12.addEdge(1, 3);
		graph12.addEdge(1, 4);
		graph12.addEdge(3, 4);
		graph12.addEdge(3, 5);
		graph12.addEdge(4, 5);
		graph12.printGraph();
		graph12.breadthFirstTraverse(3);
		graph12.breadthFirstTraverse();
		graph12.depthFirstTraverse(0);
		graph12.depthFirstTraverseRecursive(0);
		graph12.depthFirstTraverse();
		graph12.depthFirstTraverseRecursive();
		UndirectedWeightedGraph graph13=new AdjacencyMatrixUndirectedWeightedGraph(9);
		graph13.addEdge(0, 1, 4);
		graph13.addEdge(0, 7, 8);
		graph13.addEdge(1, 2, 8);
		graph13.addEdge(1, 7, 11);
		graph13.addEdge(2, 3, 7);
		graph13.addEdge(2, 5, 4);
		graph13.addEdge(2, 8, 2);
		graph13.addEdge(3, 4, 9);
		graph13.addEdge(3, 5, 14);
		graph13.addEdge(4, 5, 10);
		graph13.addEdge(5, 6, 2);
		graph13.addEdge(6, 7, 1);
		graph13.addEdge(6, 8, 6);
		graph13.addEdge(7, 8, 7);
		graph13.printGraph();
		graph13.getShortestPrathTree(0);
		UndirectedWeightedGraph graph14=new AdjacencyListUndirectedWeightedGraph(9);
		graph14.addEdge(0, 1, 4);
		graph14.addEdge(0, 7, 8);
		graph14.addEdge(1, 2, 8);
		graph14.addEdge(1, 7, 11);
		graph14.addEdge(2, 3, 7);
		graph14.addEdge(2, 5, 4);
		graph14.addEdge(2, 8, 2);
		graph14.addEdge(3, 4, 9);
		graph14.addEdge(3, 5, 14);
		graph14.addEdge(4, 5, 10);
		graph14.addEdge(5, 6, 2);
		graph14.addEdge(6, 7, 1);
		graph14.addEdge(6, 8, 6);
		graph14.addEdge(7, 8, 7);
		graph14.printGraph();
		graph14.getShortestPrathTree(0);
		UndirectedWeightedGraph graph15=new MapUndirectedWeightedGraph(9);
		graph15.addEdge(0, 1, 4);
		graph15.addEdge(0, 7, 8);
		graph15.addEdge(1, 2, 8);
		graph15.addEdge(1, 7, 11);
		graph15.addEdge(2, 3, 7);
		graph15.addEdge(2, 5, 4);
		graph15.addEdge(2, 8, 2);
		graph15.addEdge(3, 4, 9);
		graph15.addEdge(3, 5, 14);
		graph15.addEdge(4, 5, 10);
		graph15.addEdge(5, 6, 2);
		graph15.addEdge(6, 7, 1);
		graph15.addEdge(6, 8, 6);
		graph15.addEdge(7, 8, 7);
		graph15.printGraph();
		graph15.getShortestPrathTree(0);
		DirectedUnweightedGraph graph16=new AdjacencyMatrixDirectedUnweightedGraph(5);
		graph16.addEdge(0, 1);
		graph16.addEdge(0, 2);
		graph16.addEdge(1, 2);
		graph16.addEdge(1, 3);
		graph16.addEdge(2, 3);
		graph16.addEdge(2, 4);
		graph16.printGraph();
		graph16.topologicalSort();
		graph16.topologicalSortRecursive();
		DirectedUnweightedGraph graph17=new AdjacencyListDirectedUnweightedGraph(5);
		graph17.addEdge(0, 1);
		graph17.addEdge(0, 2);
		graph17.addEdge(1, 2);
		graph17.addEdge(1, 3);
		graph17.addEdge(2, 3);
		graph17.addEdge(2, 4);
		graph17.printGraph();
		graph17.topologicalSort();
		graph17.topologicalSortRecursive();
		DirectedUnweightedGraph graph18=new MapDirectedUnweightedGraph(5);
		graph18.addEdge(0, 1);
		graph18.addEdge(0, 2);
		graph18.addEdge(1, 2);
		graph18.addEdge(1, 3);
		graph18.addEdge(2, 3);
		graph18.addEdge(2, 4);
		graph18.printGraph();
		graph18.topologicalSort();
		graph18.topologicalSortRecursive();
		DirectedWeightedGraph graph19=new AdjacencyMatrixDirectedWeightedGraph(5);
		graph19.addEdge(0, 1, 2);
		graph19.addEdge(0, 2, 3);
		graph19.addEdge(1, 2, 9);
		graph19.addEdge(1, 3, 1);
		graph19.addEdge(2, 3, 2);
		graph19.addEdge(2, 4, 6);
		graph19.printGraph();
		graph19.topologicalSort();
		graph19.topologicalSortRecursive();
		DirectedWeightedGraph graph20=new AdjacencyListDirectedWeightedGraph(5);
		graph20.addEdge(0, 1, 2);
		graph20.addEdge(0, 2, 3);
		graph20.addEdge(1, 2, 9);
		graph20.addEdge(1, 3, 1);
		graph20.addEdge(2, 3, 2);
		graph20.addEdge(2, 4, 6);
		graph20.printGraph();
		graph20.topologicalSort();
		graph20.topologicalSortRecursive();
		DirectedWeightedGraph graph21=new MapDirectedWeightedGraph(5);
		graph21.addEdge(0, 1, 2);
		graph21.addEdge(0, 2, 3);
		graph21.addEdge(1, 2, 9);
		graph21.addEdge(1, 3, 1);
		graph21.addEdge(2, 3, 2);
		graph21.addEdge(2, 4, 6);
		graph21.printGraph();
		graph21.topologicalSort();
		graph21.topologicalSortRecursive();
	}

}

package faizan.java.basics.graphs;

public class Main {

	public static void main(String[] args) {
		UndirectedUnweightedGraph graph1=new AdjacencyMatrixUndirectedUnweightedGraph(5);
		graph1.addEdge(0, 1);
		graph1.addEdge(0, 2);
		graph1.addEdge(0, 3);
		graph1.addEdge(1, 4);
		graph1.addEdge(2, 3);
		graph1.addEdge(2, 4);
		graph1.printGraph();
		UndirectedUnweightedGraph graph2=new AdjacencyListUndirectedUnweightedGraph(5);
		graph2.addEdge(0, 1);
		graph2.addEdge(0, 2);
		graph2.addEdge(0, 3);
		graph2.addEdge(1, 4);
		graph2.addEdge(2, 3);
		graph2.addEdge(2, 4);
		graph2.printGraph();		
		UndirectedUnweightedGraph graph3=new MapUndirectedUnweightedGraph();
		graph3.addEdge(0, 1);
		graph3.addEdge(0, 2);
		graph3.addEdge(0, 3);
		graph3.addEdge(1, 4);
		graph3.addEdge(2, 3);
		graph3.addEdge(2, 4);
		graph3.printGraph();
		UndirectedWeightedGraph graph4=new AdjacencyMatrixUndirectedWeightedGraph(5);
		graph4.addEdge(0, 1, 5);
		graph4.addEdge(0, 2, 3);
		graph4.addEdge(0, 3, 6);
		graph4.addEdge(1, 4, 2);
		graph4.addEdge(2, 3, 1);
		graph4.addEdge(2, 4, 2);
		graph4.printGraph();
		UndirectedWeightedGraph graph5=new AdjacencyListUndirectedWeightedGraph(5);
		graph5.addEdge(0, 1, 5);
		graph5.addEdge(0, 2, 3);
		graph5.addEdge(0, 3, 6);
		graph5.addEdge(1, 4, 2);
		graph5.addEdge(2, 3, 1);
		graph5.addEdge(2, 4, 2);
		graph5.printGraph();
		UndirectedWeightedGraph graph6=new MapUndirectedWeightedGraph();
		graph6.addEdge(0, 1, 5);
		graph6.addEdge(0, 2, 3);
		graph6.addEdge(0, 3, 6);
		graph6.addEdge(1, 4, 2);
		graph6.addEdge(2, 3, 1);
		graph6.addEdge(2, 4, 2);
		graph6.printGraph();
		DirectedUnweightedGraph graph7=new AdjacencyMatrixDirectedUnweightedGraph(5);
		graph7.addEdge(0, 2);
		graph7.addEdge(0, 3);
		graph7.addEdge(1, 0);
		graph7.addEdge(1, 4);
		graph7.addEdge(2, 4);
		graph7.addEdge(3, 2);
		graph7.addEdge(4, 1);
		graph7.printGraph();
		DirectedUnweightedGraph graph8=new AdjacencyListDirectedUnweightedGraph(5);
		graph8.addEdge(0, 2);
		graph8.addEdge(0, 3);
		graph8.addEdge(1, 0);
		graph8.addEdge(1, 4);
		graph8.addEdge(2, 4);
		graph8.addEdge(3, 2);
		graph8.addEdge(4, 1);
		graph8.printGraph();
		DirectedUnweightedGraph graph9=new MapDirectedUnweightedGraph();
		graph9.addEdge(0, 2);
		graph9.addEdge(0, 3);
		graph9.addEdge(1, 0);
		graph9.addEdge(1, 4);
		graph9.addEdge(2, 4);
		graph9.addEdge(3, 2);
		graph9.addEdge(4, 1);
		graph9.printGraph();
		DirectedWeightedGraph graph10=new AdjacencyMatrixDirectedWeightedGraph(5);
		graph10.addEdge(0, 2, 3);
		graph10.addEdge(0, 3, 6);
		graph10.addEdge(1, 0, 5);
		graph10.addEdge(1, 4, 2);
		graph10.addEdge(2, 4, 2);
		graph10.addEdge(3, 2, 1);
		graph10.addEdge(4, 1, 2);
		graph10.printGraph();
		DirectedWeightedGraph graph11=new AdjacencyListDirectedWeightedGraph(5);
		graph11.addEdge(0, 2, 3);
		graph11.addEdge(0, 3, 6);
		graph11.addEdge(1, 0, 5);
		graph11.addEdge(1, 4, 2);
		graph11.addEdge(2, 4, 2);
		graph11.addEdge(3, 2, 1);
		graph11.addEdge(4, 1, 2);
		graph11.printGraph();
		DirectedWeightedGraph graph12=new MapDirectedWeightedGraph();
		graph12.addEdge(0, 2, 3);
		graph12.addEdge(0, 3, 6);
		graph12.addEdge(1, 0, 5);
		graph12.addEdge(1, 4, 2);
		graph12.addEdge(2, 4, 2);
		graph12.addEdge(3, 2, 1);
		graph12.addEdge(4, 1, 2);
		graph12.printGraph();
		AdjacencyListUndirectedUnweightedGraph graph13=new AdjacencyListUndirectedUnweightedGraph(6);
		graph13.addEdge(0, 1);
		graph13.addEdge(1, 3);
		graph13.addEdge(1, 4);
		graph13.addEdge(3, 4);
		graph13.addEdge(3, 5);
		graph13.addEdge(4, 5);
		graph13.printGraph();
		graph13.breadthFirstTraverse(3);
		graph13.breadthFirstTraverse();
		graph13.depthFirstTraverse(0);
		graph13.depthFirstTraverseRecursive(0);
		graph13.depthFirstTraverse();
		graph13.depthFirstTraverseRecursive();
		AdjacencyMatrixUndirectedWeightedGraph graph14=new AdjacencyMatrixUndirectedWeightedGraph(9);
		graph14.addEdge(0, 1, 4);
		graph14.addEdge(0, 7, 8);
		graph14.addEdge(1, 2, 8);
		graph14.addEdge(1, 7, 11);
		graph14.addEdge(2, 3, 7);
		graph14.addEdge(2, 5, 4);
		graph14.addEdge(2, 8, 2);
		graph14.addEdge(3, 4, 9);
		graph14.addEdge(3, 5, 14);
		graph14.addEdge(4, 5, 10);
		graph14.addEdge(5, 6, 2);
		graph14.addEdge(6, 7, 1);
		graph14.addEdge(6, 8, 6);
		graph14.addEdge(7, 8, 7);
		graph14.printGraph();
		graph14.getShortestPrathTree(0);
		AdjacencyListUndirectedWeightedGraph graph15=new AdjacencyListUndirectedWeightedGraph(9);
		graph15.addEdge(0, 1, 4);
		graph15.addEdge(0, 7, 8);
		graph15.addEdge(1, 2, 8);
		graph15.addEdge(1, 7, 11);
		graph15.addEdge(2, 3, 7);
		graph15.addEdge(2, 5, 4);
		graph15.addEdge(2, 8, 2);
		graph15.addEdge(3, 4, 9);
		graph15.addEdge(3, 5, 14);
		graph15.addEdge(4, 5, 10);
		graph15.addEdge(5, 6, 2);
		graph15.addEdge(6, 7, 1);
		graph15.addEdge(6, 8, 6);
		graph15.addEdge(7, 8, 7);
		graph15.printGraph();
		graph15.getShortestPrathTree(0);
	}

}
